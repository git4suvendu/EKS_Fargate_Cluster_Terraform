name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ main ]
defaults:
  run:
    shell: bash
jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
         include:
           - environment: test
             runner: ubuntu-latest
    env:
         AWS_ACCESS_KEY_ID: "ASIA2ZCHYB756H3JX54Y"
         AWS_SECRET_ACCESS_KEY: "VK50j/+hXnWdpDNRe/y49N7yEzlVmQbmWYNad8LK"
         AWS_SESSION_TOKEN: "IQoJb3JpZ2luX2VjEHYaCXVzLWVhc3QtMSJHMEUCIQDC/eMxmHY0uaH+Hf9u4iiufcPizjTRWrXtnAVafUpTkAIgBt7EZntZudm7zRM4GnKXhzrFfLXbkDtUmzCta+gQKPEqrwIIbxACGgw3NDEwMzIzMzMzMDciDNKb6KIuuFJsv7DlOiqMAj8ScqSpr0rVYDsK6a7cpruHfhmyePmOQlakQEAJTahK/eLtUd3VhtWbwVDEX0lSURC56BpPrrL0o9QgAhOvlBPRtF+m8wxYTuRY1uZHsif3CUAKl1NuHTKUlqg/biAlDhx6iNsHCKrmru1ctzYZrduKB4MNQT1NMmRqusaFRG2YaF5pEcrZqqWSmi65sohQE82V5DJfy2oTIkAT2K8cwo6LJ6z+uGbFR2NmtmojWMdWsHjRM2P7OqUIzP/QX+6dHEilrOffh5v6dUeruL5YBcdJ/PaClYw4AcP6eaKWOupDg7ZK+Qt3s3SNVGPnFT4whFEuGDY1vLAEa+LJI/9qnk0QAXEjr7dRrEFXH4Mw7rXmlAY6nQG3zHfuw64cwojiMK44bvVsbXyYbRbMtk3lZD+Solgm/ALkTR+MZ/UfnhpdpxG06x3wtR1O/V/UKOlrq/AWzdi65dUCSMYN1aQbOfgIO69eco5hdPdC+QfMRRhzACD5UBRk7H5nB45/tcYsX5j+QPfErFCTuCRgVAs6ML9BOzLJiyCZVz2hXp8ELKT+2Eq1GA34/3/tcTpcT/qmU6hG"
         AWS_DEFAULT_REGION: eu-west-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: |
          terraform init -upgrade=true -no-color -input=false
      - name: Terraform Plan
        id: plan
        run: |
         terraform plan -var-file=test/terraform.tfvars
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        id: apply
        terraform apply -auto-approve -var-file=test/terraform.tfvars
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })