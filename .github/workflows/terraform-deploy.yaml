name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ main ]
defaults:
  run:
    shell: bash
jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
         include:
           - environment: test
             runner: ubuntu-latest
           - environment: prod
             runner: ubuntu-18.04
    env:
         AWS_ACCESS_KEY_ID: "ASIA2ZCHYB75YT2MMBFX"
         AWS_SECRET_ACCESS_KEY: "8/+Q+dRY67AYQAz/Reb1jm8mbrgkVG9OGAdNZ4Sj"
         AWS_SESSION_TOKEN: "IQoJb3JpZ2luX2VjEGQaCXVzLWVhc3QtMSJIMEYCIQCy8ogAW45gzQm/vIMn8AUu/SsAeqS595cs9NrRoIV08gIhALLwV+mJKGLICEdlAg0uXg/lK2pJLR+idJvTVp3KOsEDKq8CCF0QAhoMNzQxMDMyMzMzMzA3Igx12QaitCMZph4qHroqjAJLVvYg9OIdTbC19btwB+Xgow0BwfHZRkLPvs6um4Aj8JRLFsWJxKGJAgMKrouK9zMYPxY6IN6OxeQjsjaH5bHquoU/MKXbI4CbP/eHxKLKTSkZXJpqJt9aUw7Gem9/gMFdnb8I7uG6DtCFxWw1f1bFNT5z28ja9bAOIsJt59zbDre9clqO9e+Ar+5UOvZ/stLl4ZvfsKgkFaBrYgCRgWubnQ+A+LNp0iO6AVKvHvQ1sHmCjco4OffODznzdVDn2+UkB/a2qyRrOXYqfCOjV4D+NM37b2yhrERPbrm+USE8UOezw7oWMgQKTW3mV9Rvkx+9tPR7IiK27uK7jKTr1DCIFydti6rQuSdvgDdNMP6/4pQGOpwB2O4CZ2n9BaU5i632YjnVxBIX6NbvzckKNzoUWkE0Nxj3Yl+xSb0xFo1DS/gKMmfQpy2aDq1aGRxv1DHMgAOkpgqIvlHRfGSuffG65MYFlnQSdSFUgbxBdYraRAiRhue+jK1hSK4Pf9f1SN9v+B14IxDXrD5gdvOox48MnCAbUfV2mH6x1pvGBsgL/6qktOJVdwFBfqv5Rwfyrbg6"
         AWS_DEFAULT_REGION: us-east-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: |
           rm -rf .terraform
           terraform init -upgrade=true -no-color -input=false
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false  -no-color
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -auto-approve -input=false
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })