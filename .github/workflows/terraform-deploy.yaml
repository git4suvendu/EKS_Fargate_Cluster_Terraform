name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ main ]
defaults:
  run:
    shell: bash
jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
         include:
           - environment: test
             runner: ubuntu-latest
    env:
         AWS_ACCESS_KEY_ID: "ASIA2ZCHYB753DHA3PH6"
         AWS_SECRET_ACCESS_KEY: "lHC0Z7+J0ocoPxCY9cGPsvvDQCBBhCEyF6KsNAhe"
         AWS_SESSION_TOKEN: "IQoJb3JpZ2luX2VjEGUaCXVzLWVhc3QtMSJHMEUCIQDvFYpjvx7sbCoN05uguIgtN3Trqky2PkRAB3//HeM0vQIgcYNhGZ6PbeGsJaVdkRQ5q9gfRQrUk1bd+8aEuXgJWl4qrwIIXRACGgw3NDEwMzIzMzMzMDciDHtz0LnAPtRPpPtcBSqMAjYnvqe0COgG1fyIhs2jqebIOYYU/GoGgsRInZJRS3SBmx0hZHtKS5l/7SUttvXp1gyRNrjholdrvlniuk0igizvuLCvvsX7BaXcSJZ5lr+lALSMVf625emCTnzk2s7bljqoJsAR+ksqCKfOI3bEO5N9dCwOtpH+B8HWs9TzgavA8KS5KSCHhkRwSwAqqveqimIqIdnDjPOtIp6WfbanhzFsXqzZAgvsT6mDJEegK2s+7EKm13HHZ5lilMo1Ulr/E0WpEuNkTbE24oIXAIsM7b7oVIRBnq5UNlBiDHQ06+spM/TaoZeWonD89LnlMwdtrxtJMsN8yur08IXkD8wpob1B8f4dslFn1FfhGmgwpdHilAY6nQGOzh/mvp1mgiu2kyz6pp609DmO67hWq7xZ1KSOLPX61qyYY2v+vuXNkdr4MxVaTdbmsjuvSRZuFB9pSBVOcIL8xDHWYpicYcwMNv8Cb+iu4TYpjTUXrS1niqjAtdoF5i5tT5R2Sf0ws5VeW8Zo4voY41OJodL/KeZu5y4pHYwMQE6RCuZYoj1kG3x4zPSKkjKfFSDeNHK/pmq0noNn"
         AWS_DEFAULT_REGION: us-east-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: |
           rm -rf .terraform
           terraform init -upgrade=true -no-color -input=false
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false  -no-color
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        id: apply
        run: terraform apply -auto-approve -input=false
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })