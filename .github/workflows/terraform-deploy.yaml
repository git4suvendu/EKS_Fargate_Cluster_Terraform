name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ main ]
defaults:
  run:
    shell: bash
jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
         include:
           - environment: test
             runner: ubuntu-latest
           - environment: prod
             runner: ubuntu-18.04
    env:
         AWS_ACCESS_KEY_ID: "ASIA2ZCHYB7532F7IPO5"
         AWS_SECRET_ACCESS_KEY: "35x2GIzb95xacoZvx8zL5kImSnTLd12qziMi527W"
         AWS_SESSION_TOKEN: "IQoJb3JpZ2luX2VjEHsaCXVzLWVhc3QtMSJHMEUCIDLqoBPD7BQqHi4+2Nm4NdRheergE5ZjtKCozIeZlCv7AiEAsvQadFlr+QP2Fn7i8pjGgxEoOXqqY0de3lzh1dqeSJMqrwIIdBACGgw3NDEwMzIzMzMzMDciDHs5CSdcSP4edHKWGSqMAlpfCZHpXExKUSWggBd8rHcHbFii2crqHO9jgiH00t3n8TIbb6rGUfz78cxD1yszguxsGihGJHUkkTcHgt5okxug3kwCbPcmmX2X568+Yj1UF3zbmBFmgzDO8/iuqQhgShk1zBE6AVkP2Sa2SgQTjipp57S1T9+k5aLwLIjhlaW6mfoqOwlgezu7YPEFnrgCzaNY7JJS5cwj1A+4kGBH3SBbVeGMvZO5y6xqVi24vhpoXCAtKh8DicPkZWJovj9wvvfYTPP3waBVGmqi3ilOtIcgPvYa+vVgZfEYE39+pQG0lx9zHY7A/ay37+aPvRrKzT1o1vcKIG9ixdih+uvHkOCQBWeJn1lnonj7UWww1MHnlAY6nQHAjGT9u+NxXZXRmW07h678FpMbg6u/BDByNS6NEKy8AXnWECntcsPpld0uRIUqmPGtonSpS54eBCr8pgwBIM3jJGazC+nSUoDtkM7EpCM/KtfUOfoqK7wD6kk/VXB5s/YtjT6SZEZwgnLSu0QciGBkHoA1fkryj7wJeUHS4AjNVXZ8/yrp3+wrBCCuIm0bSkCcBdJqaaSfmnPIMCcm"
         AWS_DEFAULT_REGION: eu-west-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: |
           rm -rf .terraform
           terraform init
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -var-file=${{ matrix.environment }}/terraform.tfvars -no-color
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        id: apply
        run: terraform apply -auto-approve -input=false -var-file=${{ matrix.environment }}/terraform.tfvars
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false -var-file=${{ matrix.environment }}/terraform.tfvars
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })