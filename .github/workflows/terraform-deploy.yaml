name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [ main ]
defaults:
  run:
    shell: bash
jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
         include:
           - environment: test
             runner: ubuntu-latest
           - environment: prod
             runner: ubuntu-18.04
    env:
         AWS_ACCESS_KEY_ID: "ASIA2ZCHYB755GLYZIWQ"
         AWS_SECRET_ACCESS_KEY: "ke2TZ4c7Pi1wg1cRSimV8034vFl1dP1uxakygFX8"
         AWS_SESSION_TOKEN: "IQoJb3JpZ2luX2VjEHwaCXVzLWVhc3QtMSJHMEUCIEMRz8pFs+FLX+pT5AZBkccdj1KH/X1XJQ7kCgiuOqCaAiEA4sRTkasDh2Sc8LImj2UTXbQIDfhBegz4i3SICEH/hYQqrwIIdBACGgw3NDEwMzIzMzMzMDciDDul+R1aOef8SEyaASqMAnDMO5hHjSH+g9/IzRbzqC7sOb+7Jq8igycC/F2IR2bqzCXomJaC/lszTrYzDoA4I625eNZ0eTOzjxFDTZwY1CJbAHJPcCvZzt5JQBr7jNjH4UYNVFHLs0vc92k5pwijgjo9ew06Mq6oK1l414cL4OH5p15iMJRXmsXXlLaRBo+7zlCsecMfjnc2C0Yo0reHZV4g14t96NRLkLBhcvfBBLeVsDULc2CtkbJZSptOytuyGEEN/FBdJdMI/wIceja3htl/wP+XHI7/Jjw5J3deP6ultNqYP6q5yYZrqOu3sedEPCgeIikbIncqFF1s09GAy7LOVQJvFw7stWm1pzaWf1TFBkiobR3O3CzIEEMwk9bnlAY6nQEt6OxosMnDayhkYkMvdL3MV0ST1Ean4T2Ik+Pgwr78W50NaGiWDZWrtynejnGKNKTA4VGCMkDmjzvTJNXFWpWUe4eNWR/U8uxjGub5S0hMOA1EjKkYjrWb+7YK+YVm2dkyXdEfiF5mlmUmt7sG9FG8RVJUWug+C8JfPRQYQlls19f/pu8fr2aDiAJEzFOPaXE8wBMtJYlK/8TZSXdt"
         AWS_DEFAULT_REGION: eu-west-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: |
           rm -rf .terraform
           terraform init
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -var-file=${{ matrix.environment }}/terraform.tfvars -no-color
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        id: apply
        run: terraform apply -auto-approve -input=false -var-file=${{ matrix.environment }}/terraform.tfvars
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false -var-file=${{ matrix.environment }}/terraform.tfvars
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })